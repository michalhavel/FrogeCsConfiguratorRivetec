{"ast":null,"code":"import _classCallCheck from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _createClass from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/* eslint-disable */\n/////////////////////////////////////////////////////////////////\n//\n//\n/////////////////////////////////////////////////////////////////\nimport EventsEmitter from '../EventsEmitter';\nimport velocity from 'velocity-animate';\nimport './ToolPanelBase.css'; /// WHY I'M USING GLOBAL VARIABLES, SIMPLE I'M SETTING UP WITH REACT-SCRIPTS FOR EASIER 3RD PARTY DEVELOPER USE OF PROJECT\n/// https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#using-global-variables\n\nvar Autodesk = window.Autodesk;\nvar $ = window.$;\n\nfunction getDefaultOptions() {\n  return {\n    shadow: true,\n    movable: true,\n    closable: true\n  };\n}\n\nvar ToolPanelBase =\n/*#__PURE__*/\nfunction (_EventsEmitter$Compos) {\n  _inherits(ToolPanelBase, _EventsEmitter$Compos);\n\n  _createClass(ToolPanelBase, null, [{\n    key: \"guid\",\n    ///////////////////////////////////////////////////////////////////\n    //\n    //\n    ///////////////////////////////////////////////////////////////////\n    value: function guid() {\n      var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'xxxxxxxxxx';\n      var d = new Date().getTime();\n      var guid = format.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == 'x' ? r : r & 0x7 | 0x8).toString(16);\n      });\n      return guid;\n    } ///////////////////////////////////////////////////////////////////\n    //\n    //\n    ///////////////////////////////////////////////////////////////////\n\n  }]);\n\n  function ToolPanelBase(container, title) {\n    var _this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, ToolPanelBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolPanelBase).call(this, container, ToolPanelBase.guid(), title, Object.assign(getDefaultOptions(), options)));\n    _this._dialogResult = 'CANCEL';\n    _this._isVisible = false;\n    _this._isMinimized = false;\n    _this._btnElement = options.buttonElement;\n    return _this;\n  } /////////////////////////////////////////////////////////////\n  //\n  //\n  /////////////////////////////////////////////////////////////\n\n\n  _createClass(ToolPanelBase, [{\n    key: \"htmlContent\",\n    value: function htmlContent(id) {\n      return '<div></div>';\n    } /////////////////////////////////////////////////////////////\n    //\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      this.setVisible(false);\n      $(this.container).remove();\n    } /////////////////////////////////////////////////////////////\n    //\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this._isVisible;\n    } /////////////////////////////////////////////////////////////\n    // setVisible override\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"setVisible\",\n    value: function setVisible() {\n      var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (show) {\n        $(this.container).velocity({\n          rotateY: [0, -90]\n        });\n      }\n\n      if (show !== this._isVisible) {\n        if (typeof this._events !== 'undefined') {\n          this.emit(show ? 'open' : 'close', {\n            result: this._dialogResult\n          });\n        }\n      }\n\n      this._isVisible = show;\n\n      if (this._btnElement) {\n        if (show) {\n          this._btnElement.classList.add('active');\n        } else {\n          this._btnElement.classList.remove('active');\n        }\n      }\n\n      _get(_getPrototypeOf(ToolPanelBase.prototype), \"setVisible\", this).call(this, show);\n    } /////////////////////////////////////////////////////////////\n    // Toggles panel visibility\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"toggleVisibility\",\n    value: function toggleVisibility() {\n      this.setVisible(!this._isVisible);\n    } /////////////////////////////////////////////////////////////\n    // initialize override\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.title = this.createTitleBar(this.titleLabel || this.container.id);\n      $(this.container).append(this.title);\n      this.setTitle(this.titleLabel || this.container.id, this.options);\n\n      if (this.options.movable) {\n        this.initializeMoveHandlers(this.title);\n      }\n\n      if (this.options.closable) {\n        this.closer = this.createCloseButton();\n        $(this.title).append(this.closer);\n      }\n\n      var $content = $(this.htmlContent(this.container.id));\n      this.content = $content[0];\n      $(this.container).append($content);\n      this.container.classList.add('toolPanelBase');\n    } /////////////////////////////////////////////////////////////\n    // createTitleBar override\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"createTitleBar\",\n    value: function createTitleBar(title) {\n      var _this2 = this;\n\n      var titleBar = document.createElement(\"div\");\n      titleBar.className = \"dockingPanelTitle\";\n      this.titleTextId = ToolPanelBase.guid();\n      this.titleImgId = ToolPanelBase.guid();\n      var html = \"\\n      <span id=\\\"\".concat(this.titleImgId, \"\\\"></span>\\n      <div id=\\\"\").concat(this.titleTextId, \"\\\" class=\\\"dockingPanelTitleText\\\">\\n        \").concat(title, \"\\n      </div>\\n    \");\n      $(titleBar).append(html);\n      this.addEventListener(titleBar, 'click', function (event) {\n        if (!_this2.movedSinceLastClick) {\n          _this2.onTitleClick(event);\n        }\n\n        _this2.movedSinceLastClick = false;\n      });\n      this.addEventListener(titleBar, 'dblclick', function (event) {\n        _this2.onTitleDoubleClick(event);\n      });\n      return titleBar;\n    } /////////////////////////////////////////////////////////////\n    // setTitle override\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(text, options) {\n      if (options && options.localizeTitle) {\n        $(\"#\".concat(this.titleTextId)).attr('data-i18n', text);\n        text = Autodesk.Viewing.i18n.translate(text);\n      } else {\n        $(\"#\".concat(this.titleTextId)).removeAttr('data-i18n');\n      }\n\n      $(\"#\".concat(this.titleTextId)).text(text);\n    } /////////////////////////////////////////////////////////////\n    // onTitleDoubleClick override\n    //\n    /////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"onTitleDoubleClick\",\n    value: function onTitleDoubleClick(event) {\n      this._isMinimized = !this._isMinimized;\n\n      if (this._isMinimized) {\n        this._height = $(this.container).css('height');\n        $(this.container).css({\n          'min-height': '32px',\n          overflow: 'hidden',\n          height: '32px'\n        });\n      } else {\n        $(this.container).css({\n          height: this._height,\n          'min-height': '100px',\n          overflow: 'visible'\n        });\n      }\n    }\n  }]);\n\n  return ToolPanelBase;\n}(EventsEmitter.Composer(Autodesk.Viewing.UI.DockingPanel));\n\nexport { ToolPanelBase as default };","map":{"version":3,"sources":["E:\\GitHub\\FrogeCsConfiguratorRivetec\\Vyvoj\\src\\js\\extensions\\components\\ToolPanelBase\\ToolPanelBase.js"],"names":["EventsEmitter","velocity","Autodesk","window","$","getDefaultOptions","shadow","movable","closable","ToolPanelBase","format","d","Date","getTime","guid","replace","c","r","Math","random","floor","toString","container","title","options","Object","assign","_dialogResult","_isVisible","_isMinimized","_btnElement","buttonElement","id","setVisible","remove","show","rotateY","_events","emit","result","classList","add","createTitleBar","titleLabel","append","setTitle","initializeMoveHandlers","closer","createCloseButton","$content","htmlContent","content","titleBar","document","createElement","className","titleTextId","titleImgId","html","addEventListener","event","movedSinceLastClick","onTitleClick","onTitleDoubleClick","text","localizeTitle","attr","Viewing","i18n","translate","removeAttr","_height","css","overflow","height","Composer","UI","DockingPanel"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\n/////////////////////////////////////////////////////////////////\r\n//\r\n//\r\n/////////////////////////////////////////////////////////////////\r\nimport EventsEmitter from '../EventsEmitter'\r\nimport velocity from 'velocity-animate'\r\nimport './ToolPanelBase.css'\r\n\r\n/// WHY I'M USING GLOBAL VARIABLES, SIMPLE I'M SETTING UP WITH REACT-SCRIPTS FOR EASIER 3RD PARTY DEVELOPER USE OF PROJECT\r\n/// https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#using-global-variables\r\n\r\nconst Autodesk = window.Autodesk;\r\nconst $ = window.$;\r\n\r\nfunction getDefaultOptions () {\r\n\r\n  return {\r\n    shadow: true,\r\n    movable: true,\r\n    closable: true\r\n  }\r\n}\r\n\r\nexport default class ToolPanelBase extends\r\n  EventsEmitter.Composer (Autodesk.Viewing.UI.DockingPanel) {\r\n\r\n  ///////////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  ///////////////////////////////////////////////////////////////////\r\n  static guid(format = 'xxxxxxxxxx') {\r\n\r\n    var d = new Date().getTime()\r\n\r\n    var guid = format.replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0\r\n        d = Math.floor(d / 16)\r\n        return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16)\r\n      })\r\n\r\n    return guid\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  ///////////////////////////////////////////////////////////////////\r\n  constructor(container, title, options = {}) {\r\n\r\n    super(container,\r\n      ToolPanelBase.guid(),\r\n      title,\r\n      Object.assign(getDefaultOptions(), options))\r\n\r\n    this._dialogResult = 'CANCEL'\r\n\r\n    this._isVisible = false\r\n    this._isMinimized = false\r\n\r\n    this._btnElement = options.buttonElement\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  htmlContent(id) {\r\n\r\n    return '<div></div>'\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  unload() {\r\n\r\n    this.setVisible(false)\r\n\r\n    $(this.container).remove()\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  isVisible() {\r\n\r\n    return this._isVisible\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // setVisible override\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  setVisible (show = false) {\r\n\r\n    if (show) {\r\n\r\n      $(this.container).velocity({\r\n        rotateY: [0, -90]\r\n      })\r\n    }\r\n\r\n    if (show !== this._isVisible) {\r\n\r\n      if( typeof this._events !== 'undefined') {\r\n\r\n        this.emit((show ? 'open' : 'close'), {\r\n          result: this._dialogResult\r\n        })\r\n      }\r\n    }\r\n\r\n    this._isVisible = show\r\n\r\n    if (this._btnElement) {\r\n\r\n      if (show) {\r\n\r\n        this._btnElement.classList.add('active')\r\n\r\n      } else {\r\n\r\n        this._btnElement.classList.remove('active')\r\n      }\r\n    }\r\n\r\n    super.setVisible(show)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // Toggles panel visibility\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  toggleVisibility () {\r\n\r\n    this.setVisible(!this._isVisible)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // initialize override\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  initialize() {\r\n\r\n    this.title = this.createTitleBar(\r\n      this.titleLabel || this.container.id)\r\n\r\n    $(this.container).append(this.title)\r\n\r\n    this.setTitle(\r\n      this.titleLabel || this.container.id,\r\n      this.options)\r\n\r\n    if(this.options.movable) {\r\n      this.initializeMoveHandlers(this.title)\r\n    }\r\n\r\n    if(this.options.closable){\r\n      this.closer = this.createCloseButton()\r\n      $(this.title).append(this.closer)\r\n    }\r\n\r\n    var $content = $(this.htmlContent(\r\n      this.container.id))\r\n\r\n    this.content = $content[0]\r\n\r\n    $(this.container).append($content)\r\n\r\n    this.container.classList.add('toolPanelBase')\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // createTitleBar override\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  createTitleBar (title) {\r\n\r\n    var titleBar = document.createElement(\"div\")\r\n\r\n    titleBar.className = \"dockingPanelTitle\"\r\n\r\n    this.titleTextId = ToolPanelBase.guid()\r\n\r\n    this.titleImgId = ToolPanelBase.guid()\r\n\r\n    var html = `\r\n      <span id=\"${this.titleImgId}\"></span>\r\n      <div id=\"${this.titleTextId}\" class=\"dockingPanelTitleText\">\r\n        ${title}\r\n      </div>\r\n    `\r\n\r\n    $(titleBar).append(html)\r\n\r\n    this.addEventListener(titleBar, 'click', (event)=> {\r\n\r\n      if (!this.movedSinceLastClick) {\r\n\r\n        this.onTitleClick(event)\r\n      }\r\n\r\n      this.movedSinceLastClick = false\r\n    })\r\n\r\n    this.addEventListener(titleBar, 'dblclick', (event) => {\r\n\r\n      this.onTitleDoubleClick(event)\r\n    })\r\n\r\n    return titleBar\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // setTitle override\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  setTitle (text, options) {\r\n\r\n    if (options && options.localizeTitle) {\r\n\r\n      $(`#${this.titleTextId}`).attr('data-i18n', text)\r\n\r\n      text = Autodesk.Viewing.i18n.translate(text)\r\n\r\n    } else {\r\n\r\n      $(`#${this.titleTextId}`).removeAttr('data-i18n')\r\n    }\r\n\r\n    $(`#${this.titleTextId}`).text(text)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  // onTitleDoubleClick override\r\n  //\r\n  /////////////////////////////////////////////////////////////\r\n  onTitleDoubleClick(event) {\r\n\r\n    this._isMinimized = !this._isMinimized\r\n\r\n    if(this._isMinimized) {\r\n\r\n      this._height = $(this.container).css('height')\r\n\r\n      $(this.container).css({\r\n        'min-height':'32px',\r\n        overflow: 'hidden',\r\n        height:'32px'\r\n      })\r\n\r\n    } else {\r\n\r\n      $(this.container).css({\r\n        height:this._height,\r\n        'min-height':'100px',\r\n        overflow: 'visible'\r\n      })\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}