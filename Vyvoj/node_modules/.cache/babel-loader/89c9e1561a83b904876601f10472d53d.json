{"ast":null,"code":"// List hodnot pro tabulku\n// var myList =\n//     [\n//         { id: '1', number: '1111', description: 'Nyt 1' },\n//         { id: '2', number: '222', description: 'Nyt 2' }\n//     ];\nimport jQuery from \"jquery\";\nimport $ from \"jquery\"; // Loads rivets data from server and fill table\n\nfunction getRivets(callback) {\n  jQuery.ajax({\n    url: '/rivetec/getrivets',\n    success: function success(res) {\n      console.log('rivets portflio', res);\n      callback(res);\n    }\n  });\n} // Builds the HTML Table out of myList json data from Ivy restful service.\n\n\nfunction buildHtmlTable(rivetsData) {\n  var columns = addAllColumnHeaders(rivetsData);\n\n  for (var i = 0; i < rivetsData.length; i++) {\n    var row$ = $('<tr/>');\n\n    for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n      var cellValue = rivetsData[i][columns[colIndex]];\n\n      if (cellValue == null) {\n        cellValue = \"\";\n      }\n\n      row$.append($('<td/>').html(cellValue));\n    }\n\n    $(\"#csvDataTable\").append(row$);\n  }\n}\n\n; // Adds a header row to the table and returns the set of columns.\n// Need to do union of keys from all records as some records may not contain\n// all records\n\nfunction addAllColumnHeaders(myList) {\n  var columnSet = [];\n  var headerTr$ = $('<tr/>');\n\n  for (var i = 0; i < myList.length; i++) {\n    var rowHash = myList[i];\n\n    for (var key in rowHash) {\n      if ($.inArray(key, columnSet) === -1) {\n        columnSet.push(key);\n        headerTr$.append($('<th/>').html(key));\n      }\n    }\n  }\n\n  $(\"#csvDataTable\").append(headerTr$);\n  return columnSet;\n} // vycisteni tabulky\n\n\nfunction clearTable() {\n  $(\"#csvDataTable\").empty();\n}\n\nexport var rowID; // Oznaceni radku v tabulce\n\nexport function selectedRowOnTable() {\n  $(\"#csvDataTable tr\").click(function () {\n    $(this).addClass('selected').siblings().removeClass('selected');\n    var value = $(this).find('td:first').html();\n    console.log(value);\n    rowID = value;\n    return value;\n  });\n} // Nacti data CLICK\n\n$(\"#btnDataImport\").click(function () {\n  getRivets(function (rivetsData) {\n    clearTable();\n    buildHtmlTable(rivetsData);\n    selectedRowOnTable();\n  });\n}); // document.getElementById('btnDataImport').addEventListener('click',function(){\n//     getRivets(function (rivetsData) {\n//         clearTable();\n//         buildHtmlTable(rivetsData);\n//         selectedRowOnTable();\n//     })\n// })\n\nvar importCsvData = {\n  rowID: rowID,\n  selectedRowOnTable: selectedRowOnTable\n};\nexport default importCsvData;","map":{"version":3,"sources":["E:\\GitHub\\FrogeCsConfiguratorRivetec\\Vyvoj\\src\\js\\importCsvData.js"],"names":["jQuery","$","getRivets","callback","ajax","url","success","res","console","log","buildHtmlTable","rivetsData","columns","addAllColumnHeaders","i","length","row$","colIndex","cellValue","append","html","myList","columnSet","headerTr$","rowHash","key","inArray","push","clearTable","empty","rowID","selectedRowOnTable","click","addClass","siblings","removeClass","value","find","importCsvData"],"mappings":"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","sourcesContent":["// List hodnot pro tabulku\r\n// var myList =\r\n//     [\r\n//         { id: '1', number: '1111', description: 'Nyt 1' },\r\n//         { id: '2', number: '222', description: 'Nyt 2' }\r\n//     ];\r\n\r\nimport jQuery from \"jquery\";\r\nimport $ from \"jquery\";\r\n\r\n\r\n\r\n// Loads rivets data from server and fill table\r\nfunction getRivets(callback) {\r\n    jQuery.ajax({\r\n        url: '/rivetec/getrivets',\r\n        success: function (res) {\r\n            console.log('rivets portflio', res);\r\n            callback(res);\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\n// Builds the HTML Table out of myList json data from Ivy restful service.\r\nfunction buildHtmlTable(rivetsData) {\r\n    var columns = addAllColumnHeaders(rivetsData);\r\n\r\n    for (var i = 0; i < rivetsData.length; i++) {\r\n        var row$ = $('<tr/>');\r\n        for (var colIndex = 0; colIndex < columns.length; colIndex++) {\r\n            var cellValue = rivetsData[i][columns[colIndex]];\r\n\r\n            if (cellValue == null) { cellValue = \"\"; }\r\n\r\n            row$.append($('<td/>').html(cellValue));\r\n        }\r\n        $(\"#csvDataTable\").append(row$);\r\n    }\r\n};\r\n\r\n// Adds a header row to the table and returns the set of columns.\r\n// Need to do union of keys from all records as some records may not contain\r\n// all records\r\nfunction addAllColumnHeaders(myList) {\r\n    var columnSet = [];\r\n    var headerTr$ = $('<tr/>');\r\n\r\n    for (var i = 0; i < myList.length; i++) {\r\n        var rowHash = myList[i];\r\n        for (var key in rowHash) {\r\n            if ($.inArray(key, columnSet) === -1) {\r\n                columnSet.push(key);\r\n                headerTr$.append($('<th/>').html(key));\r\n            }\r\n        }\r\n    }\r\n    $(\"#csvDataTable\").append(headerTr$);\r\n\r\n    return columnSet;\r\n}\r\n\r\n// vycisteni tabulky\r\nfunction clearTable() {\r\n    $(\"#csvDataTable\").empty()\r\n}\r\n\r\nexport var rowID;\r\n// Oznaceni radku v tabulce\r\nexport function selectedRowOnTable() {\r\n    $(\"#csvDataTable tr\").click(function () {\r\n        $(this).addClass('selected').siblings().removeClass('selected');\r\n        var value = $(this).find('td:first').html();\r\n        console.log(value);\r\n        rowID = value;\r\n        return value;\r\n    });\r\n    \r\n}\r\n\r\n// Nacti data CLICK\r\n$(\"#btnDataImport\").click(function () {\r\n    getRivets(function (rivetsData) {\r\n        clearTable();\r\n        buildHtmlTable(rivetsData);\r\n        selectedRowOnTable();\r\n    })\r\n})\r\n\r\n// document.getElementById('btnDataImport').addEventListener('click',function(){\r\n//     getRivets(function (rivetsData) {\r\n//         clearTable();\r\n//         buildHtmlTable(rivetsData);\r\n//         selectedRowOnTable();\r\n//     })\r\n// })\r\nconst importCsvData = {\r\n    rowID,\r\n    selectedRowOnTable\r\n  };\r\nexport default importCsvData;"]},"metadata":{},"sourceType":"module"}