{"ast":null,"code":"import _classCallCheck from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\GitHub\\\\FrogeCsConfiguratorRivetec\\\\Vyvoj\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport EventsEmitter from '../EventsEmitter';\n\nvar EventTool =\n/*#__PURE__*/\nfunction (_EventsEmitter) {\n  _inherits(EventTool, _EventsEmitter);\n\n  function EventTool(viewer) {\n    var _this;\n\n    _classCallCheck(this, EventTool);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventTool).call(this));\n    _this.viewer = viewer;\n    viewer.toolController.registerTool(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } /////////////////////////////////////////////////////////////////\n  // Tool names\n  //\n  /////////////////////////////////////////////////////////////////\n\n\n  _createClass(EventTool, [{\n    key: \"getNames\",\n    value: function getNames() {\n      return ['Viewer.Selection.Tool'];\n    } /////////////////////////////////////////////////////////////////\n    // Tool name\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'Viewer.Selection.Tool';\n    } /////////////////////////////////////////////////////////////////\n    // Activate Tool\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      if (!this.active) {\n        this.active = true;\n        this.viewer.toolController.activateTool(this.getName());\n        this.emit('activate', this);\n      }\n    } /////////////////////////////////////////////////////////////////\n    // Deactivate tool\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      if (this.active) {\n        this.active = false;\n        this.viewer.toolController.deactivateTool(this.getName());\n        this.emit('deactivate', this);\n      }\n    } /////////////////////////////////////////////////////////////////\n    //\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleSingleClick\",\n    value: function handleSingleClick(event, button) {\n      return this.emit('singleclick', event, button);\n    } /////////////////////////////////////////////////////////////////\n    //\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(event) {\n      return this.emit('mousemove', event);\n    } /////////////////////////////////////////////////////////////////\n    //\n    //\n    /////////////////////////////////////////////////////////////////\n\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event, keyCode) {\n      return this.emit('keydown', event, keyCode);\n    }\n  }]);\n\n  return EventTool;\n}(EventsEmitter);\n\nexport { EventTool as default };","map":{"version":3,"sources":["E:\\GitHub\\FrogeCsConfiguratorRivetec\\Vyvoj\\src\\js\\extensions\\components\\Viewer.EventTool\\Viewer.EventTool.js"],"names":["EventsEmitter","EventTool","viewer","toolController","registerTool","active","activateTool","getName","emit","deactivateTool","event","button","keyCode"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,kBAA1B;;IAEqBC,S;;;;;AAEnB,qBAAaC,MAAb,EAAqB;AAAA;;AAAA;;AAEnB;AAEA,UAAKA,MAAL,GAAcA,MAAd;AAEAA,IAAAA,MAAM,CAACC,cAAP,CAAsBC,YAAtB;AANmB;AAOpB,G,CAED;AACA;AACA;AACA;;;;;+BACY;AAEV,aAAO,CAAC,uBAAD,CAAP;AACD,K,CAED;AACA;AACA;AACA;;;;8BACW;AAET,aAAO,uBAAP;AACD,K,CAED;AACA;AACA;AACA;;;;+BACY;AAEV,UAAG,CAAC,KAAKC,MAAT,EAAiB;AAEf,aAAKA,MAAL,GAAc,IAAd;AAEA,aAAKH,MAAL,CAAYC,cAAZ,CAA2BG,YAA3B,CACE,KAAKC,OAAL,EADF;AAGA,aAAKC,IAAL,CAAU,UAAV,EAAsB,IAAtB;AACD;AACF,K,CAED;AACA;AACA;AACA;;;;iCACc;AAEZ,UAAI,KAAKH,MAAT,EAAiB;AAEf,aAAKA,MAAL,GAAc,KAAd;AAEA,aAAKH,MAAL,CAAYC,cAAZ,CAA2BM,cAA3B,CACE,KAAKF,OAAL,EADF;AAGA,aAAKC,IAAL,CAAU,YAAV,EAAwB,IAAxB;AACD;AACF,K,CAED;AACA;AACA;AACA;;;;sCACmBE,K,EAAOC,M,EAAQ;AAEhC,aAAO,KAAKH,IAAL,CAAU,aAAV,EAAyBE,KAAzB,EAAgCC,MAAhC,CAAP;AACD,K,CAED;AACA;AACA;AACA;;;;oCACiBD,K,EAAO;AAEtB,aAAO,KAAKF,IAAL,CAAU,WAAV,EAAuBE,KAAvB,CAAP;AACD,K,CAED;AACA;AACA;AACA;;;;kCACeA,K,EAAOE,O,EAAS;AAE7B,aAAO,KAAKJ,IAAL,CAAU,SAAV,EAAqBE,KAArB,EAA4BE,OAA5B,CAAP;AACD;;;;EAxFoCZ,a;;SAAlBC,S","sourcesContent":["import EventsEmitter from '../EventsEmitter'\r\n\r\nexport default class EventTool extends EventsEmitter {\r\n\r\n  constructor (viewer) {\r\n\r\n    super()\r\n\r\n    this.viewer = viewer\r\n\r\n    viewer.toolController.registerTool(this)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // Tool names\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  getNames () {\r\n\r\n    return ['Viewer.Selection.Tool']\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // Tool name\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  getName () {\r\n\r\n    return 'Viewer.Selection.Tool'\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // Activate Tool\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  activate () {\r\n\r\n    if(!this.active) {\r\n\r\n      this.active = true\r\n\r\n      this.viewer.toolController.activateTool(\r\n        this.getName())\r\n\r\n      this.emit('activate', this)\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  // Deactivate tool\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  deactivate () {\r\n\r\n    if (this.active) {\r\n\r\n      this.active = false\r\n\r\n      this.viewer.toolController.deactivateTool(\r\n        this.getName())\r\n\r\n      this.emit('deactivate', this)\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  handleSingleClick (event, button) {\r\n\r\n    return this.emit('singleclick', event, button)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  handleMouseMove (event) {\r\n\r\n    return this.emit('mousemove', event)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////////////\r\n  handleKeyDown (event, keyCode) {\r\n\r\n    return this.emit('keydown', event, keyCode)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}